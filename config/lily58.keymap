/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <27 28>;
        };

        capsword {
            bindings = <&kp CAPS>;
            key-positions = <25 26>;
        };

        f5 {
            bindings = <&kp F5>;
            key-positions = <3 4>;
        };

        f10 {
            bindings = <&kp F10>;
            key-positions = <7 8>;
        };

        f11 {
            bindings = <&kp F11>;
            key-positions = <9 10>;
        };
    };

    behaviors {
        lyr1: lyr1 {
            compatible = "zmk,behavior-mod-morph";
            label = "LYR1";
            bindings = <&mo 1>, <&tog 1>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL|MOD_LSFT|MOD_RCTL|MOD_RSFT)>;
        };

        lyr2: lyr2 {
            compatible = "zmk,behavior-mod-morph";
            label = "LYR2";
            bindings = <&mo 2>, <&tog 2>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL|MOD_LSFT|MOD_RCTL|MOD_RSFT)>;
        };

        mclk: mclk {
            compatible = "zmk,behavior-mod-morph";
            label = "MCLK";
            bindings = <&mkp LCLK>, <&mkp RCLK>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL|MOD_LSFT|MOD_RCTL|MOD_RSFT)>;
            keep-mods = <(MOD_LCTL|MOD_RCTL)>;
        };

        hd_cps: hd_cps {
            compatible = "zmk,behavior-hold-tap";
            label = "HD_CPS";
            bindings = <&kp>, <&cw_cps>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "balanced";
            retro-tap;
        };

        cw_cps: cw_cps {
            compatible = "zmk,behavior-tap-dance";
            label = "CW_CPS";
            #binding-cells = <0>;
            bindings = <&sk LSHFT>, <&caps_word>;
        };

        left_home: left_home {
            compatible = "zmk,behavior-mod-morph";
            label = "LEFT_HOME";
            bindings = <&kp LEFT>, <&kp HOME>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        down_pg: down_pg {
            compatible = "zmk,behavior-mod-morph";
            label = "DOWN_PG";
            bindings = <&kp DOWN>, <&kp PG_DN>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        up_pg: up_pg {
            compatible = "zmk,behavior-mod-morph";
            label = "UP_PG";
            bindings = <&kp UP>, <&kp PG_UP>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        right_end: right_end {
            compatible = "zmk,behavior-mod-morph";
            label = "RIGHT_END";
            bindings = <&kp RIGHT>, <&kp END>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        bspc_del: bspc_del {
            compatible = "zmk,behavior-mod-morph";
            label = "BSPC_DEL";
            bindings = <&kp BSPC>, <&kp DEL>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        caps_word: caps_word { continue-list = <UNDERSCORE MINUS>; };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
            // |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //                     | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| BSPC  | GUI   |

            display-name = "Base";
            bindings = <
&kp F1     &kp F2  &kp F3       &kp F4       &kp F5          &kp F6                                  &kp F7     &kp F8      &kp F9       &kp F10      &kp F11   &kp F12
&kp HOME   &kp Q   &kp W        &kp E        &kp R           &kp T                                   &kp Y      &kp U       &kp I        &kp O        &kp P     &kp GRAVE
&kp END    &kp A   &mt LCTRL S  &mt LSHFT D  &mt LEFT_ALT F  &kp G                                   &kp H      &mt RALT J  &mt RSHFT K  &mt RCTRL L  &kp SEMI  &kp SQT
&kp LGUI   &kp Z   &kp X        &kp C        &kp V           &kp B            &kp LBKT     &kp RBKT  &kp N      &kp M       &kp COMMA    &kp DOT      &kp FSLH  &kp RGUI
                                &lyr1        &lt 1 ESC       &hd_cps LSHFT 0  &kp SPACE    &kp RET   &bspc_del  &lt 2 DEL   &lyr2
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        raise_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |       |     |     |      |      |      |                   |      |       |       |      |       |       |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |   7   |   8   |  9   |   0   |       |
            // |   F1  |  F2 |  F3 |  F4  |  F5  |  F6  |                   |      |   <-  |   v   |  ^   |  ->   |       |
            // |   F7  |  F8 |  F9 |  F10 |  F11 |  F12 |        |  |       |  +   |   -   |   =   |  [   |   ]   |   \   |
            //                     |      |      |      |        |  |       |      |       |       |

            display-name = "Raise";
            bindings = <
&trans  &trans        &trans           &trans                  &trans                  &trans                                        &bt BT_SEL 0    &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3     &bt BT_SEL 4  &bt BT_CLR
&none   &kp NUMBER_1  &kp NUMBER_2     &kp NUMBER_3            &kp NUMBER_4            &kp N5                                        &kp NUMBER_6    &kp NUMBER_7    &kp N8        &kp N9           &kp N0        &trans
&none   &kp MINUS     &mt LCTRL EQUAL  &mt LSHFT LEFT_BRACKET  &mt LALT RIGHT_BRACKET  &kp GRAVE                                     &left_home      &down_pg        &up_pg        &right_end       &kp SQT       &trans
&trans  &kp INS       &kp SCROLLLOCK   &kp CAPSLOCK            &kp PSCRN               &kp LG(SPACE)  &kp LC(MINUS)    &kp RC(PLUS)  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_UP  &mmv MOVE_RIGHT  &kp BSLH      &trans
                                       &trans                  &trans                  &trans         &trans           &mclk         &trans          &trans          &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };
        
        extra_1 { status = "reserved"; };

        extra_2 { status = "reserved"; };

        extra_3 { status = "reserved"; };
        
        extra_4 { status = "reserved"; };
    };
};
